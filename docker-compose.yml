version: "3.7"

services:
  nginx:
    image: nginx:alpine
    container_name: "${COMPOSE_PROJECT_NAME}_nginx"
    environment:
      NGINX_ROOT: /var/www/html/web
      APP_USER: $APP_USER
      APP_GROUP: $APP_GROUP
      NGINX_HOST: php
    user: root
    volumes:
      - ./.dev/.config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.dev/.config/nginx/default.template:/etc/nginx/sites-available/default.template
      - type: volume
        source: webdata
        target: /var/www/html
    depends_on:
        - php
    command: /bin/sh -c "envsubst '$${NGINX_ROOT} $${NGINX_HOST}' < /etc/nginx/sites-available/default.template > /etc/nginx/sites-available/default.conf && nginx -g 'daemon off;'"
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"

  php:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    user: root
    volumes:
      - webdata:/var/www/html

  db:
    image: mariadb
    container_name: "${COMPOSE_PROJECT_NAME}_db"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  staging:
    build:
      context: .
      dockerfile: ./staging/Dockerfile
    container_name: "${COMPOSE_PROJECT_NAME}_staging"
    user: root
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_staging.rule=Host(`staging.${PROJECT_BASE_URL}`)"

  adminer:
    image: adminer
    container_name: "${COMPOSE_PROJECT_NAME}_adminer"
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"
    restart: always

  mailhog:
    image: mailhog/mailhog
    container_name: "${COMPOSE_PROJECT_NAME}_mailhog"
    labels:
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"
  
  traefik:
    image: traefik:v2.0
    container_name: "${COMPOSE_PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - 8000:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  portainer:
    image: portainer/portainer
    container_name: "${COMPOSE_PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"

volumes:
  webdata: