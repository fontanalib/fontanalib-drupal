version: "3.7"

services:
  nginx:
    image: nginx:alpine
    container_name: "${COMPOSE_PROJECT_NAME}_nginx"
    environment:
      NGINX_ROOT: ${NGINX_ROOT}
      NGINX_HOST: staging
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/sites-available/default.template:/etc/nginx/sites-available/default.template
      - ./config/nginx/sites-available/dev.conf:/etc/nginx/sites-available/dev.conf
      - type: volume
        source: development
        target: /project/drupal
      - type: volume
        source: production
        target: ${PROJECT_PATH}
    depends_on:
        - staging
        - dev
    command: /bin/sh -c "envsubst '$${NGINX_ROOT} $${NGINX_HOST}' < /etc/nginx/sites-available/default.template > /etc/nginx/sites-available/default.conf && nginx -g 'daemon off;'"
    ports:
      - 81:81
    labels:
      - traefik.http.routers.production.service=production
      - traefik.http.routers.dev.service=dev
      - traefik.http.services.production.loadbalancer.server.port=80
      - traefik.http.routers.production.rule=Host(`${PROJECT_BASE_URL}`)
      - traefik.http.services.dev.loadbalancer.server.port=81
      - traefik.http.routers.dev.rule=Host(`dev.${PROJECT_BASE_URL}`)

  staging:
    container_name: "${COMPOSE_PROJECT_NAME}_staging"
    build:
      context: .
      dockerfile: ./staging/Dockerfile
      args:
        ARG_APP_USER: ${APP_USER}
        ARG_APP_GROUP: ${APP_GROUP}
        ARG_APP_USER_ID: ${APP_USER_ID}
        ARG_APP_GROUP_ID: ${APP_GROUP_ID}
        APP_CODE_PATH: ${PROJECT_PATH}
    volumes:
      - type: volume
        source: production
        target: ${PROJECT_PATH}
  dev:
    container_name: "${COMPOSE_PROJECT_NAME}_dev"
    build:
      context: .
      dockerfile: ./dev/Dockerfile
      args:
        ARG_APP_USER: ${APP_USER}
        ARG_APP_GROUP: ${APP_GROUP}
    volumes:
      - development:/project/drupal
      - production:/project/production

  db:
    image: mariadb
    container_name: "${COMPOSE_PROJECT_NAME}_db"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  adminer:
    image: adminer
    container_name: "${COMPOSE_PROJECT_NAME}_adminer"
    labels:
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_adminer.rule=Host(`adminer.${PROJECT_BASE_URL}`)"
    restart: always

  mailhog:
    image: mailhog/mailhog
    container_name: "${COMPOSE_PROJECT_NAME}_mailhog"
    labels:
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    container_name: "${COMPOSE_PROJECT_NAME}_traefik"
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - 8000:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  portainer:
    image: portainer/portainer
    container_name: "${COMPOSE_PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)

volumes:
  development:
  production: